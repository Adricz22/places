{"version":3,"file":"static/js/191.09ebacb6.chunk.js","mappings":"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","sources":["shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_URL_BACKEND}/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_URL_BACKEND}/users/signup`,\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","abortCtrl","abort","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","ErrorModal","Card","LoadingSpinner","asOverlay","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","Input","ImageUpload","undefined","prevMode"],"sourceRoot":""}