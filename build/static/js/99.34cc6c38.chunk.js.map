{"version":3,"file":"static/js/99.34cc6c38.chunk.js","mappings":"qPAiBA,MAmGA,EAnGiB,KACf,MAAMA,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAAEC,EAAF,MAAaC,EAAb,YAAoBC,EAApB,WAAiCC,IAAeC,EAAAA,EAAAA,MAC/CC,EAAWC,IAAgBC,EAAAA,EAAAA,GAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAGII,GAAWC,EAAAA,EAAAA,MAuBjB,OACE,UAAC,WAAD,YACE,SAAC,IAAD,CAAYd,MAAOA,EAAOe,QAASb,KACnC,kBACEc,UAAU,aACVC,SA1BqBC,UACzBC,EAAMC,iBACN,IACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASnB,EAAUoB,OAAOjB,MAAMC,OAChDa,EAASE,OAAO,cAAenB,EAAUoB,OAAOd,YAAYF,OAC5Da,EAASE,OAAO,UAAWnB,EAAUoB,OAAOb,QAAQH,OACpDa,EAASE,OAAO,UAAW3B,EAAK6B,QAChCJ,EAASE,OAAO,QAASnB,EAAUoB,OAAOZ,MAAMJ,aAC1CP,EAAY,GAAD,OACZyB,OADY,WAEf,OACAL,EACA,CACEM,cAAe,UAAY/B,EAAKgC,QAGpCf,EAAS,IACK,CAAd,MAAOgB,GAAO,GASZC,QAAQ,sBAHV,UAKG/B,IAAa,SAAC,IAAD,CAAgBgC,WAAS,KACvC,SAAC,IAAD,CACEC,GAAG,QACHC,KAAK,QACLC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAASnC,KAEX,SAAC,IAAD,CACE2B,GAAG,cACHC,KAAK,cACLC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IACjCF,UAAU,4DACVC,QAASnC,KAEX,SAAC,IAAD,CACE2B,GAAG,UACHC,KAAK,UACLC,QAAQ,QACRE,MAAM,UACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,gCACVC,QAASnC,KAEX,SAAC,IAAD,CACE2B,GAAG,QACHQ,QAASnC,EACTkC,UAAU,8BAGZ,SAAC,IAAD,CAAQJ,KAAK,SAASO,UAAWtC,EAAUK,QAA3C,4BA3CN,C,sDC9DF,MAwCA,EAxCgBkC,GACVA,EAAMC,MAEN,cACE5B,UAAS,yBAAoB2B,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,kBACpBH,KAAMD,EAAMC,KAJd,SAMGD,EAAMK,WAITL,EAAMM,IAEN,SAAC,KAAD,CACEA,GAAIN,EAAMM,GACVC,MAAOP,EAAMO,MACblC,UAAS,yBAAoB2B,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,kBALtB,SAOGJ,EAAMK,YAKX,mBACEhC,UAAS,yBAAoB2B,EAAME,MAAQ,UAAlC,YACPF,EAAMG,SAAW,kBADV,YAELH,EAAMI,QAAU,kBACpBZ,KAAMQ,EAAMR,KACZgB,QAASR,EAAMQ,QACfT,SAAUC,EAAMD,SANlB,SAQGC,EAAMK,U,gECjCb,MA6DA,EA7DqBL,IACnB,MAAOS,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAYC,IAAiBF,EAAAA,EAAAA,aAC7B7C,EAASgD,IAAcH,EAAAA,EAAAA,WAAS,GAEjCI,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,KACR,IAAKR,EACH,OAEF,MAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBP,EAAcK,EAAWG,OAAzB,EAEFH,EAAWI,cAAcb,EAAzB,GACC,CAACA,IAqBJ,OACE,iBAAKpC,UAAU,eAAf,WACE,kBACEgB,GAAIW,EAAMX,GACVkC,IAAKR,EACLS,MAAO,CAAEC,QAAS,QAClBjC,KAAK,OACLkC,OAAO,kBACPC,SA3BiBnD,IACrB,IAAIoD,EACAC,EAAc/D,EACdU,EAAMsD,OAAOC,OAAuC,IAA9BvD,EAAMsD,OAAOC,MAAMC,QAC3CJ,EAAapD,EAAMsD,OAAOC,MAAM,GAChCrB,EAAQkB,GACRd,GAAW,GACXe,GAAc,IAEdf,GAAW,GACXe,GAAc,GAEhB7B,EAAMH,QAAQG,EAAMX,GAAIuC,EAAYC,EAApC,KAiBE,iBAAKxD,UAAS,uBAAkB2B,EAAMiC,QAAU,UAAhD,WACE,iBAAK5D,UAAU,wBAAf,UACGuC,IAAc,gBAAKsB,IAAKtB,EAAYuB,IAAI,aACvCvB,IAAc,qDAElB,SAACwB,EAAA,EAAD,CAAQ5C,KAAK,SAASgB,QAnBH,KACvBO,EAAcsB,QAAQC,OAAtB,EAkBI,4BAIAxE,IAAW,uBAAIkC,EAAMJ,cAnB3B,C,gECrCF,MAAM2C,EAAe,CAACC,EAAOC,KAC3B,OAAQA,EAAOjD,MACb,IAAK,SACH,MAAO,IACFgD,EACH3E,MAAO4E,EAAOC,IACd5E,SAAS6E,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAO/C,aAEzC,IAAK,QACH,MAAO,IACF8C,EACHI,WAAW,GAGf,QACE,OAAOJ,EAdX,EA+EF,EA7DexC,IACb,MAAO6C,EAAYC,IAAYC,EAAAA,EAAAA,YAAWR,EAAc,CACtD1E,MAAOmC,EAAMgD,cAAgB,GAC7BJ,WAAW,EACX9E,QAASkC,EAAMiD,eAAgB,KAG3B,GAAE5D,EAAF,QAAMQ,GAAYG,GAClB,MAAEnC,EAAF,QAASC,GAAY+E,GAE3B5B,EAAAA,EAAAA,YAAU,KACRpB,EAAQR,EAAIxB,EAAOC,EAAnB,GACC,CAACuB,EAAIxB,EAAOC,EAAS+B,IAExB,MAAMqD,EAAiB1E,IACrBsE,EAAS,CACPtD,KAAM,SACNkD,IAAKlE,EAAMsD,OAAOjE,MAClB6B,WAAYM,EAAMN,YAHpB,EAOIyD,EAAe,KACnBL,EAAS,CACPtD,KAAM,SADR,EAKID,EACc,UAAlBS,EAAMT,SACJ,kBACEF,GAAIW,EAAMX,GACVG,KAAMQ,EAAMR,KACZ4D,YAAapD,EAAMoD,YACnBzB,SAAUuB,EACVG,OAAQF,EACRtF,MAAOgF,EAAWhF,SAGpB,qBACEwB,GAAIW,EAAMX,GACViE,KAAMtD,EAAMsD,MAAQ,EACpB3B,SAAUuB,EACVG,OAAQF,EACRtF,MAAOgF,EAAWhF,QAIxB,OACE,iBACEQ,UAAS,wBACNwE,EAAW/E,SAAW+E,EAAWD,WAAa,yBAFnD,WAKE,kBAAOW,QAASvD,EAAMX,GAAtB,SAA2BW,EAAMP,QAChCF,GACCsD,EAAW/E,SAAW+E,EAAWD,YAAa,uBAAI5C,EAAMJ,cAR9D,C,uECnEF,MAaA,EAbmBI,IAEf,SAAC,IAAD,CACEwD,SAAUxD,EAAM5B,QAChBqF,OAAO,qBACPC,OAAQ1D,EAAM3C,MACdsG,QAAQ,SAAC,IAAD,CAAQnD,QAASR,EAAM5B,QAAvB,kBAJV,UAME,uBAAI4B,EAAM3C,S,kFCNhB,MAAMuG,EAAgB5D,IACpB,MAAM6D,GACJ,iBAAKxF,UAAS,gBAAW2B,EAAM3B,WAAamD,MAAOxB,EAAMwB,MAAzD,WACE,mBAAQnD,UAAS,wBAAmB2B,EAAM8D,aAA1C,UACE,wBAAK9D,EAAMyD,YAEb,kBACEnF,SACE0B,EAAM1B,SAAW0B,EAAM1B,SAAYE,GAAUA,EAAMC,iBAFvD,WAKE,gBAAKJ,UAAS,yBAAoB2B,EAAM+D,cAAxC,SACG/D,EAAMK,YAET,mBAAQhC,UAAS,wBAAmB2B,EAAMgE,aAA1C,SACGhE,EAAM2D,eAKf,OAAOM,EAAAA,aAAsBJ,EAASK,SAASC,eAAe,cAA9D,EAoBF,EAjBenE,IAEX,UAAC,EAAAoE,SAAD,WACGpE,EAAM0D,OAAQ,SAACW,EAAA,EAAD,CAAU7D,QAASR,EAAMwD,YACxC,SAACc,EAAA,EAAD,CACEC,GAAIvE,EAAM0D,KACVc,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QALb,UAOE,SAACf,EAAD,IAAkB5D,Q,6CCvC1B,MAAM4E,EAAc,CAACpC,EAAOC,KAC1B,OAAQA,EAAOjD,MACb,IAAK,eACH,IAAIqF,GAAc,EAClB,IAAK,MAAMC,KAAWtC,EAAM3D,OACrB2D,EAAM3D,OAAOiG,KAIhBD,EADEC,IAAYrC,EAAOqC,QACPD,GAAepC,EAAO3E,QAEtB+G,GAAerC,EAAM3D,OAAOiG,GAAShH,SAGvD,MAAO,IACF0E,EACH3D,OAAQ,IACH2D,EAAM3D,OACT,CAAC4D,EAAOqC,SAAU,CAAEjH,MAAO4E,EAAO5E,MAAOC,QAAS2E,EAAO3E,UAE3DA,QAAS+G,GAEb,IAAK,WACH,MAAO,CACLhG,OAAQ4D,EAAO5D,OACff,QAAS2E,EAAOoC,aAEpB,QACE,OAAOrC,EA3BX,EA+BW7E,EAAU,CAACoH,EAAeC,KACrC,MAAOvH,EAAWqF,IAAYC,EAAAA,EAAAA,YAAW6B,EAAa,CACpD/F,OAAQkG,EACRjH,QAASkH,IAoBX,MAAO,CAACvH,GAjBawH,EAAAA,EAAAA,cAAY,CAAC5F,EAAIxB,EAAOC,KAC3CgF,EAAS,CACPtD,KAAM,eACN3B,MAAOA,EACPC,QAASA,EACTgH,QAASzF,GAJX,GAMC,KAEiB4F,EAAAA,EAAAA,cAAY,CAACC,EAAWC,KAC1CrC,EAAS,CACPtD,KAAM,WACNX,OAAQqG,EACRL,YAAaM,GAHf,GAKC,IAEH,C,8CCvDK,MAAM3H,EAAgB,KAC3B,MAAOJ,EAAWgI,IAAgBzE,EAAAA,EAAAA,WAAS,IACpCtD,EAAOgI,IAAY1E,EAAAA,EAAAA,YAEpB2E,GAAqBtE,EAAAA,EAAAA,QAAO,IAE5B1D,GAAc2H,EAAAA,EAAAA,cAClB1G,eAAOgH,GAAoD,IAA/CC,EAA8C,uDAArC,MAAOC,EAA8B,uDAAvB,KAAMC,EAAiB,uDAAP,CAAC,EAClDN,GAAa,GACb,MAAMO,EAAgB,IAAIC,gBAC1BN,EAAmBjD,QAAQwD,KAAKF,GAEhC,IACE,MAAMG,QAAiBC,MAAMR,EAAK,CAChCC,SACAC,OACAC,UACAM,OAAQL,EAAcK,SAGlBC,QAAqBH,EAASI,OAMpC,GAJAZ,EAAmBjD,QAAUiD,EAAmBjD,QAAQ8D,QACrDC,GAAYA,IAAYT,KAGtBG,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAI/B,OADAnB,GAAa,GACNa,CAKR,CAJC,MAAO/G,GAGP,MAFAmG,EAASnG,EAAIqH,SACbnB,GAAa,GACPlG,CACP,CACF,GACD,IAcF,OAPA+B,EAAAA,EAAAA,YAAU,IACD,KAELqE,EAAmBjD,QAAQmE,SAASC,GAAcA,EAAUC,SAA5D,GAED,IAEI,CAAEtJ,YAAWC,QAAOC,cAAaC,WAXrB,KACjB8H,EAAS,KAAT,EAUF,C,6DCtDF,MAAMsB,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBnH,EAAoB,MAASH,KAAMmH,IAEnC7G,EAAsB4C,IAAG,CACpClD,KAAMoH,EACNlE,IAAKA,IAQMqE,EAAkB,MAASvH,KAAMsH,IAEjCnE,EAAW,CAAC9E,EAAO6B,KAC9B,IAAI5B,GAAU,EACd,IAAK,MAAMkJ,KAAatH,EAClBsH,EAAUxH,OAASmH,IACrB7I,EAAUA,GAAWD,EAAMoJ,OAAOjF,OAAS,GAEzCgF,EAAUxH,OAASoH,IACrB9I,EAAUA,GAAWD,EAAMoJ,OAAOjF,QAAUgF,EAAUtE,KAEpDsE,EAAUxH,OAASqH,IACrB/I,EAAUA,GAAWD,EAAMoJ,OAAOjF,QAAUgF,EAAUtE,KA7BjC,QA+BnBsE,EAAUxH,OACZ1B,EAAUA,IAAYD,GAASmJ,EAAUtE,KA/BpB,QAiCnBsE,EAAUxH,OACZ1B,EAAUA,IAAYD,GAASmJ,EAAUtE,KAEvCsE,EAAUxH,OAASsH,IACrBhJ,EAAUA,GAAW,iBAAiBoJ,KAAKrJ,IAG/C,OAAOC,CAAP,C","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const navigate = useNavigate();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_URL_BACKEND}/places`,\n        \"POST\",\n        formData,\n        {\n          authorization: \"Bearer \" + auth.token,\n        }\n      );\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form\n        className=\"place-form\"\n        onSubmit={placeSubmitHandler}\n        encType=\"multipart/form-data\"\n      >\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          name=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          name=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          name=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n","import { Link } from \"react-router-dom\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || \"default\"} ${\n          props.inverse && \"button--inverse\"\n        } ${props.danger && \"button--danger\"}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || \"default\"} ${\n        props.inverse && \"button--inverse\"\n      } ${props.danger && \"button--danger\"}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n"],"names":["auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","navigate","useNavigate","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","userId","process","authorization","token","err","encType","asOverlay","id","name","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","props","href","size","inverse","danger","children","to","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}